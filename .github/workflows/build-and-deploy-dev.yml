name: Azure App Serviceにコンテナアプリケーションをビルド&デプロイ

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev # Azure上で作成したフェデレーション資格情報の環境と一致させる
    env:
      DOCKER_IMAGE_NAME: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ vars.AZURE_WEBAPP_NAME }}:latest # ACRの容量を節約するため常にlatestを更新
    permissions:
      id-token: write # OIDC接続を行うために必要
    steps:
      - name: ソースのチェックアウト
        uses: actions/checkout@v3
      - name: Azureにログイン
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: ACRにログイン
        run: az acr login -n ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
      - name: Dockerイメージのビルドとプッシュ
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }} -f Dockerfile.dev .
          docker push ${{ env.DOCKER_IMAGE_NAME }}
      - name: Azure App Serviceにデプロイ
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          images: ${{ env.DOCKER_IMAGE_NAME }}
